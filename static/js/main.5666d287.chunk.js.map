{"version":3,"sources":["assets/logo.svg","assets/cart.svg","assets/list.svg","assets/replay.svg","assets/chart.svg","components/LeftSidebar.js","components/Search.js","components/Item.js","components/ItemsCategory.js","components/Items.js","components/Main.js","components/RightSidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LeftSidebar","className","src","logo","alt","list","replay","chart","cart","Search","type","placeholder","Item","name","console","log","ItemsCategory","category","items","map","item","data","note","image","Items","Main","style","display","RightSidebar","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,qYC8B5BC,EAtBK,WAClB,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAW,YAAaC,IAAKC,IAAMC,IAAI,aAC5C,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,kBACb,yBAAKC,IAAKG,IAAMD,IAAI,eAEtB,yBAAKH,UAAU,kBACb,yBAAKC,IAAKI,IAAQF,IAAI,iBAExB,yBAAKH,UAAU,kBACb,yBAAKC,IAAKK,IAAOH,IAAI,iBAIzB,yBAAKH,UAAU,kBACb,yBAAKC,IAAKM,IAAMJ,IAAI,iBCbbK,G,MATA,WACb,OACE,2BACEC,KAAK,SACLC,YAAY,cACZV,UAAU,uBCADW,G,wBALF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGd,OAFAC,QAAQC,IAAIF,GAEL,uBAAGZ,UAAU,QAAQY,KCYfG,EAdO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAEjC,OADAJ,QAAQC,IAAIE,EAAUC,GAEpB,yBAAKjB,UAAU,kBACb,4BAAKgB,GACL,yBAAKhB,UAAU,cACZiB,EAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,EAASA,SCPdC,EAAO,CACX,CACEJ,SAAU,uBACVC,MAAO,CACL,CAAEL,KAAM,UAAWS,KAAM,GAAIC,MAAO,IACpC,CAAEV,KAAM,SAAUS,KAAM,GAAIC,MAAO,MAGvC,CACEN,SAAU,gBACVC,MAAO,CAAC,CAAEL,KAAM,SAAUS,KAAM,GAAIC,MAAO,MAE7C,CACEN,SAAU,YACVC,MAAO,CACL,CAAEL,KAAM,QAASS,KAAM,GAAIC,MAAO,IAClC,CAAEV,KAAM,OAAQS,KAAM,GAAIC,MAAO,OAexBC,EAVD,WACZ,OACE,yBAAKvB,UAAU,mBACZoB,EAAKF,KAAI,SAACC,GAET,OADAN,QAAQC,IAAIK,GACL,kBAAC,EAAkBA,QCVnBK,EAfF,WACX,OACE,yBAAKxB,UAAU,kBACb,yBAAKyB,MAAO,CAAEC,QAAS,SACrB,wBAAI1B,UAAU,cACZ,6CADF,uDAIA,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCLS2B,G,MAPM,WACnB,OACE,yBAAK3B,UAAU,mBACb,wC,MCUS4B,MAVf,WACE,OACE,yBAAK5B,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCc6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,c","file":"static/js/main.5666d287.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cd82407e.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.9ab5a995.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.b4ea3d62.svg\";","module.exports = __webpack_public_path__ + \"static/media/replay.3ed09143.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart.459c4f25.svg\";","import React from \"react\";\r\nimport \"./LeftSidebar.css\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport cart from \"../assets/cart.svg\";\r\nimport list from \"../assets/list.svg\";\r\nimport replay from \"../assets/replay.svg\";\r\nimport chart from \"../assets/chart.svg\";\r\n\r\nconst LeftSidebar = () => {\r\n  return (\r\n    <div className=\"left-container\">\r\n      <img className={\"logo-icon\"} src={logo} alt=\"App Logo\" />\r\n      <div className=\"icons-container\">\r\n        <div className=\"icon-container\">\r\n          <img src={list} alt=\"List Icon\" />\r\n        </div>\r\n        <div className=\"icon-container\">\r\n          <img src={replay} alt=\"Replay Icon\" />\r\n        </div>\r\n        <div className=\"icon-container\">\r\n          <img src={chart} alt=\"Chart Icon\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cart-container\">\r\n        <img src={cart} alt=\"Cart Icon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LeftSidebar;\r\n","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nconst Search = () => {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      placeholder=\"search item\"\r\n      className=\"search-container\"\r\n    ></input>\r\n  );\r\n};\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./Item.css\";\r\n\r\nconst Item = ({ name }) => {\r\n  console.log(name);\r\n\r\n  return <p className=\"item\">{name}</p>;\r\n};\r\nexport default Item;\r\n","import React from \"react\";\r\nimport \"./ItemsCategory.css\";\r\nimport Item from \"./Item\";\r\n\r\nconst ItemsCategory = ({ category, items }) => {\r\n  console.log(category, items);\r\n  return (\r\n    <div className=\"items-category\">\r\n      <h1>{category}</h1>\r\n      <div className=\"items-list\">\r\n        {items.map((item) => (\r\n          <Item {...item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemsCategory;\r\n","import React from \"react\";\r\nimport \"./Items.css\";\r\nimport ItemsCategory from \"./ItemsCategory\";\r\n\r\nconst data = [\r\n  {\r\n    category: \"Fruit and vegetables\",\r\n    items: [\r\n      { name: \"Avocado\", note: \"\", image: \"\" },\r\n      { name: \"Banana\", note: \"\", image: \"\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Meat and Fish\",\r\n    items: [{ name: \"Salmon\", note: \"\", image: \"\" }],\r\n  },\r\n  {\r\n    category: \"Beverages\",\r\n    items: [\r\n      { name: \"Pepsi\", note: \"\", image: \"\" },\r\n      { name: \"Beer\", note: \"\", image: \"\" },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Items = () => {\r\n  return (\r\n    <div className=\"items-container\">\r\n      {data.map((item) => {\r\n        console.log(item);\r\n        return <ItemsCategory {...item} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Items;\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport \"./Main.css\";\r\nimport Items from \"./Items\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div style={{ display: \"flex\" }}>\r\n        <h1 className=\"main-title\">\r\n          <span>Shoppingify</span> allows you take your shopping list wherever\r\n          you go\r\n        </h1>\r\n        <Search />\r\n      </div>\r\n      <Items />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./RightSidebar.css\";\r\n\r\nconst RightSidebar = () => {\r\n  return (\r\n    <div className=\"right-container\">\r\n      <h1>Hello</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default RightSidebar;\r\n","import React from \"react\";\nimport LeftSidebar from \"./components/LeftSidebar\";\nimport Main from \"./components/Main\";\nimport RightSidebar from \"./components/RightSidebar\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <LeftSidebar />\n      <Main />\n      <RightSidebar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}